version: '3'
services:
  frontend:
    build: .
    image: frontend
    ports:
      - '80:3000'
    depends_on:
      - backend
    environment:
      - REACT_APP_API_BASE_URL=${REACT_APP_API_BASE_URL}
    deploy:
      resources:
        limits:
          memory: 512M

  backend:
    build: ./server
    image: backend
    ports:
      - '3001:3001'
    depends_on:
      - db
    command: bash -c 'while !</dev/tcp/db/3306; do sleep 1; done; npm start'
    environment:
      - DB_HOST=db
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    deploy:
      resources:
        limits:
          memory: 256M

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INNODB_BUFFER_POOL_SIZE: 128M
      MYSQL_INNODB_LOG_BUFFER_SIZE: 16M
      MYSQL_INNODB_LOG_FILE_SIZE: 48M
      MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT: 2
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          'root',
          '-p${MYSQL_ROOT_PASSWORD}',
        ]
      interval: 5s
      timeout: 5s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 256M

volumes:
  mysql_data:
